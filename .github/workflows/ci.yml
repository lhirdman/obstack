name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./apps/frontend

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.12.0'
        cache: 'npm'
        cache-dependency-path: './apps/frontend/package-lock.json'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Type check
      run: npm run type-check
    
    - name: Lint
      run: npm run lint
    
    - name: Run tests
      run: npm run test

  backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./apps/backend

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: observastack_test
          POSTGRES_USER: observastack
          POSTGRES_PASSWORD: observastack
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Lint with Ruff
      run: ruff check .
    
    - name: Format check with Ruff
      run: ruff format --check .
    
    - name: Test database migrations
      env:
        DATABASE_URL: postgresql://observastack:observastack@localhost:5432/observastack_test
      run: |
        alembic upgrade head
        alembic downgrade base
        alembic upgrade head
    
    - name: Run tests
      env:
        DATABASE_URL: postgresql://observastack:observastack@localhost:5432/observastack_test
      run: pytest

  documentation:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./docs

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: './docs/package-lock.json'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build documentation
      run: npm run build
    
    - name: Test documentation build
      run: npm run serve -- --no-open --port 3001 &